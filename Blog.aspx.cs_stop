using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Data.SqlClient;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using System.Drawing;
using System.Web.UI.HtmlControls;
using System.Runtime.CompilerServices;
using System.IO;
using System.Security.Cryptography;
using System.Xml;
using ASP;
using System.Text.RegularExpressions;

public partial class secretadmin_Blog : System.Web.UI.Page
{
    SqlConnection con = new SqlConnection(method.str);
    int blogid=0;
    protected void Page_Load(object sender, EventArgs e)
    {
        var qryParam = Request.Url.Query;
        if (!String.IsNullOrEmpty(qryParam))
            blogid = Convert.ToInt32(Regex.Match(qryParam, @"\d+").Value);
        else
        {
            string path = HttpContext.Current.Request.Url.AbsolutePath;
            path = path.Replace("/Blog/", "");
            h1.InnerText = path.Replace("-", " ");
        }
        BindBlogDetails(h1.InnerText);
        BindBlogList();
        BindBlogComments();        
        //BindCategoriesTags();
    }

    public void BindBlogComments()
    {
        using (SqlCommand cmd = new SqlCommand("Select * from TB_BlogComments where blogid="+ blogid +"", con))
        {
            cmd.Parameters.AddWithValue("@blogid", blogid);
            SqlDataAdapter sda = new SqlDataAdapter(cmd);
            DataTable dt = new DataTable();
            sda.Fill(dt);
            rptComments.DataSource = dt;
            rptComments.DataBind();
        }
    }

    public void BindBlogList()
    {
        try
        {
            using (SqlCommand cmd = new SqlCommand("GetBlogsDetails", con))
            {
                cmd.CommandType = CommandType.StoredProcedure;
                SqlDataAdapter da = new SqlDataAdapter(cmd);
                DataTable dt = new DataTable();
                da.Fill(dt);
                foreach (DataRow DR in dt.Rows)
                {
                    if (DR["Title"].ToString() != h1.InnerText) {
                        HtmlGenericControl li = new HtmlGenericControl("li");
                        tabs.Controls.Add(li);

                        HtmlGenericControl anchor = new HtmlGenericControl("a");
                        anchor.Attributes.Add("href", "~/Blog/" + DR["Title"].ToString().Replace(' ', '-'));
                        anchor.InnerText = DR["Title"].ToString();
                        li.Controls.Add(anchor);
                    }
                }
            }
        }
        catch (Exception ex)
        {
        }
    }
    public void BindCategoriesTags()
    {
        using (SqlCommand cmd = new SqlCommand("GetBlogCategories_Tags", con))
        {
            cmd.CommandType = CommandType.StoredProcedure;
            SqlDataAdapter sda = new SqlDataAdapter(cmd);
            DataSet ds = new DataSet();
            sda.Fill(ds);
          
        }
    }
    internal void BindBlogDetails(string title)
    {
        try
        {
            using (SqlConnection conn = new SqlConnection(method.str))
            {
                SqlCommand cmd = new SqlCommand("GetBlogsDetailsByBlogID", conn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.AddWithValue("@blogid", blogid);
                cmd.Parameters.AddWithValue("title", title);
                SqlDataAdapter sda = new SqlDataAdapter(cmd);
                DataTable dt = new DataTable();
                sda.Fill(dt);
                HtmlMeta meta = new HtmlMeta();
                meta.Name = "Description";
                meta.Content = dt.Rows[0]["description"].ToString();
                blogid = Convert.ToInt32(dt.Rows[0]["blogid"]);
                HtmlTitle tile = new HtmlTitle();
                this.Page.Header.Controls.Add(meta);
                tile.Text = h1.InnerText;
                this.Page.Header.Controls.Add(tile);

                //lblDescription.Text = dt.Rows[0]["description"].ToString();
                lblCreated_DT.Text = dt.Rows[0]["created_dt"].ToString();
                lblContent.Text = dt.Rows[0]["content"].ToString();
                if (!Convert.ToBoolean(dt.Rows[0]["showComments"]))
                    divComments.Visible = false;
                else
                    divComments.Visible = true;

            }
        }
        catch(Exception ex)
        {

        }
    }



    protected void post_click(object sender, EventArgs e)
    {
       
        using (SqlCommand cmd = new SqlCommand("AddBlogComment", con))
        {
            cmd.CommandType = CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("@comment", comments.Text);
            cmd.Parameters.AddWithValue("@blogid", blogid);
            cmd.Parameters.AddWithValue("comment_by", "user");
            cmd.Parameters.AddWithValue("comment_dt", DateTime.Now);
            cmd.Connection.Open();
            cmd.ExecuteNonQuery();
            cmd.Connection.Close();
            BindBlogComments();
            comments.Text = "";
        }

    }
    public string Convert_DT_XML(DataTable dt)
    {
        MemoryStream stream = new MemoryStream();
        dt.WriteXml(stream, true);
        stream.Seek(0, SeekOrigin.Begin);
        StreamReader rdr = new StreamReader(stream);
        string xmlstr;
        xmlstr = rdr.ReadToEnd();
        return (xmlstr);
    }
}