using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Data.SqlClient;
public partial class admin_modyfypayment : System.Web.UI.Page
{
    static string str5;
    static string str4;
    static string PayoutNo="";
    SqlConnection con = new SqlConnection(method.str);
    SqlCommand com;

    SqlDataAdapter da;
    protected void Page_Load(object sender, EventArgs e)
    {
        InsertFunction.CheckAdminlogin();
        str5 = Convert.ToString(Request.QueryString["n1"]);
        str4 = Convert.ToString(Request.QueryString["n"]);
        if (!IsPostBack)
        {
            //ViewState["check"] = null;
            if (str4 == null)
            {
                Response.Redirect("adminLog.aspx");

            }
            else
            {
                if (str4 == "ADD")
                {

                    txtUserId.Enabled = true;
                    txtUserName.Enabled = true;
                    txtUserName.Text = " ";

                    PayoutNo = str5;
                }
                else {

                    txtUserId.Enabled = false;
                    txtUserName.Enabled = false;

                    go1(str4, str5); 
                }
            }
            //BindDispatchedAmt();
        }

    }
    public void go1(string str3, string payoutno)
    {
        com = new SqlCommand("showpayout", con);
        com.CommandType = CommandType.StoredProcedure;
        com.Parameters.AddWithValue("@pno", payoutno);
        DataTable t = new DataTable();
        da = new SqlDataAdapter(com);
        da.Fill(t);
        if (t.Rows.Count > 0)
        {
             //PayoutNo= t.Rows[0]["payoutno"].ToString()

        //    ddltdstype.SelectedValue = t.Rows[0]["panstatus"].ToString().Trim();
           
             if (t.Rows[0]["panstatus"].ToString().Trim() == "5")
                ddltdstype.SelectedIndex = 1;
            else if (t.Rows[0]["panstatus"].ToString().Trim() == "20")
                ddltdstype.SelectedIndex = 2;
             else if (t.Rows[0]["panstatus"].ToString().Trim() == "0")
                ddltdstype.SelectedIndex = 0;


            ddlDisplay.SelectedValue = t.Rows[0]["paymentdisplay"].ToString();
            txtTDS.Text = t.Rows[0]["tds"].ToString();
            txtUserId.Text = t.Rows[0]["userid"].ToString();
            txtUserName.Text = t.Rows[0]["name"].ToString();

            txtdirectincome.Text = t.Rows[0]["DirectIncome"].ToString();//2
            txtMatchingIncome.Text = t.Rows[0]["binaryamt"].ToString();//1

            txtLB1.Text= t.Rows[0]["level1"].ToString();//3.....ltgold
            txtLB2.Text = t.Rows[0]["level2"].ToString();//4.....ltdiamond
            txtLB3.Text = t.Rows[0]["level3"].ToString();//5.......ltemperor

            txtSClub.Text = t.Rows[0]["RStar"].ToString();//6.......ltcrown
            txtPClub.Text = t.Rows[0]["RSuper"].ToString();//7.......lgold
            txtRClub.Text = t.Rows[0]["Rdiamond"].ToString();//8........ldiamond

            txtCrown.Text = t.Rows[0]["RRoyal"].ToString();//9.........lcrown
            txtEmperor.Text = t.Rows[0]["RoyaltyIncome"].ToString();//10.............lemperor


            txtothercharges.Text = t.Rows[0]["othercharges"].ToString();
            txtHandlingChrgs.Text = t.Rows[0]["HandlingCharges"].ToString();

            txtremark.Text = t.Rows[0]["remarks"].ToString();
            txtTDS.Text = t.Rows[0]["tds"].ToString();
            txtTotalEarning.Text = t.Rows[0]["totalearning"].ToString();
            txtDispatch.Text = t.Rows[0]["dispachedamt"].ToString();
           
            txt_ReleaseAmt.Text = t.Rows[0]["ReleaseAmt"].ToString();


            ddl_Payoutstatus.SelectedValue = t.Rows[0]["iselegible"].ToString().Trim();
            if (t.Rows[0]["iselegible"].ToString() == "0")
            {
                ddl_Payoutstatus.Enabled = true;
                ddl_Payoutstatus.Items.RemoveAt(0);
            }
            else
                ddl_Payoutstatus.Enabled = false; 

            if (t.Rows[0]["isPaid"].ToString() == "1")
            {
                lbl_Paid.Text = "Paid";
                lbl_Paid.ForeColor = System.Drawing.Color.Green;
            }
            else
            {
                lbl_Paid.Text = "Unpaid";
                lbl_Paid.ForeColor = System.Drawing.Color.Red;
            }

        }
    }
    protected void Button1_Click(object sender, EventArgs e)
    {
        try
        {

            if (str4 == "ADD")
            {
                if (txtUserId.Text.Trim() == "")
                {
                    utility.MessageBox(this, "Please Enter User Id.");
                    return;
                }

            }
            if (ddltdstype.SelectedValue.ToString() == "0")
            {
                utility.MessageBox(this, "Please Select TDS Type.");
                return;

            }
            com = new SqlCommand("updatepayout", con);
            com.CommandType = CommandType.StoredProcedure;
            com.Parameters.AddWithValue("@regno", txtUserId.Text);
            com.Parameters.AddWithValue("@id", Convert.ToInt32(Request.QueryString["n1"]));

            com.Parameters.AddWithValue("@display", int.Parse(ddlDisplay.SelectedValue.ToString()));
 
            com.Parameters.AddWithValue("@direct",  Convert.ToDouble(txtdirectincome.Text.Trim()));//2
            com.Parameters.AddWithValue("@binary",  Convert.ToDouble(txtMatchingIncome.Text.Trim()));//1

            com.Parameters.AddWithValue("@lb1", Convert.ToDouble(txtLB1.Text.Trim()));//3.....ltgold
            com.Parameters.AddWithValue("@lb2", Convert.ToDouble(txtLB2.Text.Trim()));//4.....ltdiamond
            com.Parameters.AddWithValue("@lb3", Convert.ToDouble(txtLB3.Text.Trim()));//5.....ltemperor

            com.Parameters.AddWithValue("@SClub", Convert.ToDouble(txtSClub.Text.Trim()));//6.....ltcrown
            com.Parameters.AddWithValue("@PClub", Convert.ToDouble(txtPClub.Text.Trim()));//7.......lgold
            com.Parameters.AddWithValue("@RClub", Convert.ToDouble(txtRClub.Text.Trim()));//8.......ldiamond

            com.Parameters.AddWithValue("@HandlingChrgs", Convert.ToDouble(txtHandlingChrgs.Text.Trim()));
     
            com.Parameters.AddWithValue("@LEmperor", Convert.ToDouble(txtEmperor.Text.Trim()));//9.......lemperor
            com.Parameters.AddWithValue("@LCrown", Convert.ToDouble(txtCrown.Text.Trim()));//10.......lcrown
          
            com.Parameters.AddWithValue("@tds", int.Parse(ddltdstype.SelectedValue));
            com.Parameters.AddWithValue("@othercharge", Convert.ToDouble(txtothercharges.Text));

            com.Parameters.AddWithValue("@pno", str5);
            com.Parameters.AddWithValue("@Master", str4);

            com.Parameters.AddWithValue("@remarks", txtremark.Text);
            com.Parameters.Add("@flag", SqlDbType.VarChar, 50).Direction = ParameterDirection.Output;
            com.Parameters.AddWithValue("@Iselegible", ddl_Payoutstatus.SelectedValue);
            com.Parameters.AddWithValue("@ReleaseAmt", string.IsNullOrEmpty(txt_ReleaseAmt.Text.Trim()) ? "0" : txt_ReleaseAmt.Text.Trim());
            con.Open();
            com.ExecuteNonQuery();
            string status = com.Parameters["@flag"].Value.ToString();
            con.Close();
            if (status == "1")
            { 
                utility.MessageBox(this, "Payout has been Updated.");
                go1(str4, str5); 
                string qstr = "select PayToDate=convert(varchar, PayToDate, 103)   from PayoutDate where PayoutNo=@PayoutNo ";
                com = new SqlCommand(qstr, con);
                com.Parameters.AddWithValue("@PayoutNo", PayoutNo);
                con.Open();
                SqlDataReader sdr = com.ExecuteReader();
                if (sdr.HasRows)
                {
                    sdr.Read();
                    Response.Redirect("adminpayout2.aspx?n=" + sdr["PayToDate"].ToString());
                }
                con.Close();
            }
            else
            {
                utility.MessageBox(this, status);
                Label1.Text = "Not Updated, Try again!";
            }
        }
        catch
        {
        }
        finally
        {
            con.Close();
        }
    }
    protected void ddltdstype_SelectedIndexChanged(object sender, EventArgs e)
    {
        BindDispatchedAmt();
    }

    public void BindDispatchedAmt()
    {
        try
        {
            double total =  double.Parse(txtdirectincome.Text.Trim()) + double.Parse(txtMatchingIncome.Text.Trim()) + double.Parse(txtLB1.Text.Trim()) +
            double.Parse(txtLB2.Text.Trim()) + double.Parse(txtLB3.Text.Trim()) + double.Parse(txtSClub.Text.Trim()) + double.Parse(txtPClub.Text.Trim())
            + double.Parse(txtRClub.Text.Trim()) + double.Parse(txtEmperor.Text.Trim()) + double.Parse(txtCrown.Text.Trim());
            if (ddltdstype.SelectedValue.ToString() != "0")
            {
                double Tax=  double.Parse(ddltdstype.SelectedValue);

                txtTDS.Text = txtTotalEarning.Text = txtDispatch.Text = string.Empty;
                double tds = (Tax * Math.Round(total)) / 100;
                txtTDS.Text = Convert.ToString(Math.Round(tds));
                txtTotalEarning.Text = Convert.ToString(Math.Round(total));
                txtDispatch.Text = Convert.ToString((double.Parse(txt_ReleaseAmt.Text.Trim())+ double.Parse(txtTotalEarning.Text)) - (double.Parse(txtTDS.Text) + double.Parse(txtHandlingChrgs.Text) + double.Parse(txtothercharges.Text)));
            }
             
            if (str4 != "ADD")
            {
                if (ddltdstype.SelectedValue.ToString() == "0")
                {
                    ddltdstype.Focus();
                    utility.MessageBox(this, "Please Select TDS Type.");
                }
            }
        }
        catch
        {
            utility.MessageBox(this, "Please Select TDS Type.");
        }
    }
    //protected void txtHandlingChrgs_TextChanged(object sender, EventArgs e)
    //{
    //    txtDispatch.Text = Convert.ToString(double.Parse(txtTotalEarning.Text) - (double.Parse(txtTDS.Text) + double.Parse(txtHandlingChrgs.Text) + double.Parse(txtothercharges.Text)));
    //}
    //protected void txtothercharges_TextChanged(object sender, EventArgs e)
    //{
    //    txtDispatch.Text = Convert.ToString(double.Parse(txtTotalEarning.Text) - (double.Parse(txtTDS.Text) + double.Parse(txtHandlingChrgs.Text) + double.Parse(txtothercharges.Text)));
    //}

 
 
    protected void txtUserId_TextChanged(object sender, EventArgs e)
    {
        string qstr = "select Appmstfname from Appmst where appmstRegno=@appmstRegno ";
        com = new SqlCommand(qstr, con);
        com.Parameters.AddWithValue("@appmstRegno", txtUserId.Text.Trim());
        con.Open();
        SqlDataReader sdr = com.ExecuteReader();
        if (sdr.HasRows)
        {
            sdr.Read();
            txtUserName.Text = sdr["Appmstfname"].ToString();
        }
        con.Close();

    }
}
